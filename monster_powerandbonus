
#include<bits/stdc++.h>
#include <iostream>

using namespace std;
/*static bool comp(pair<int,int>a,pair<int,int>b){
    return a.first<b.first;
}*/
int main()
{
    int n;
    cin>>n;
    int experience;
    cin>>experience;
    vector<int> power;vector<int> bonus;
    int t=n;
    while(t--){
        int in;
        cin>>in;
        power.push_back(in);
    }
    t=n;
    while(t--){
        int in;
        cin>>in;
        bonus.push_back(in);
    }
    priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>> q;
    for(int i=0;i<n;i++){
    q.push({power[i],bonus[i]});
}
/*vector<pair<int,int>> monster;
for(int i=0;i<n;i++){
    monster[i].push_back({power[i],bonus[i]});
}
sort(monster.begin(),monster.end(),comp);*/
int count=0;
while(!q.empty()){
    if(q.top().first<=experience){
        count++;
        experience+=q.top().second;
        q.pop();
    }
    else{
        break;
    }
}
cout<<count<<"\n";
    return 0;
}
